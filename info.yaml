--- 
# information
project: 
  title: "HSV Mixer"
  description: "reads HSV values from 3 encoders, convert to them RGB, and generates PWM signals to drive an RGB LED"
  author: "@proppy (forked from Matt Venn)"
  picture: doc/hsv2rgb.jpg
  license: LICENSE
  waive_caravel: "Matt can't get it to work"

interfaces: ['la1', 'gpio']

# test within caravel
caravel_test:
  recipe: "coco_test"
  gl_recipe: "coco_test_gl"
  directory: "caravel_hsv_mixer"
  id: 10
  module_name: "wrapped_hsv_mixer"
  instance_name: "wrapped_hsv_mixer"

# module test
module_test:
  recipe: "all" 
  directory: "hsv_mixer"
  makefile: "Makefile"

# run the wrapper formal proof
wrapper_proof:
  directory: "."
  sby: "properties.sby"

# openlane config, used in case I need to re-harden
openlane:
  config: "config.tcl"

# source required for various configs and module instantiation
source:
    - wrapper.v
    - hsv_mixer/src/debounce.v
    - hsv_mixer/src/encoder.v
    - hsv_mixer/src/pwm.v
    - hsv_mixer/src/hsv_mixer.v
    - hsv_mixer/src/hsv2rgb.v    

# gds - check size = 300x300, nothing on metal 5, do a DRC, check 141 tristate buffers, check LVS
final:
  directory: "final"
  gds_filename: "gds/wrapped_hsv_mixer.gds"
  lef_filename: "lef/wrapped_hsv_mixer.lef"
  lvs_filename: "verilog/gl/wrapped_hsv_mixer.v"
